{
  "_args": [
    [
      "@babel/plugin-transform-typeof-symbol@https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
      "/root/cylab-app/node_modules/polymer-cli"
    ]
  ],
  "_from": "@babel/plugin-transform-typeof-symbol@https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
  "_id": "@babel/plugin-transform-typeof-symbol@7.0.0-beta.46",
  "_inCache": true,
  "_location": "/polymer-cli/@babel/plugin-transform-typeof-symbol",
  "_phantomChildren": {},
  "_requested": {
    "name": "@babel/plugin-transform-typeof-symbol",
    "raw": "@babel/plugin-transform-typeof-symbol@https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
    "rawSpec": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
    "scope": "@babel",
    "spec": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/polymer-build"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
  "_shasum": "643529184cbb07199237c94537c89ea9a721fa0a",
  "_shrinkwrap": null,
  "_spec": "@babel/plugin-transform-typeof-symbol@https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.0.0-beta.46.tgz",
  "_where": "/root/cylab-app/node_modules/polymer-cli",
  "dependencies": {
    "@babel/helper-plugin-utils": "7.0.0-beta.46"
  },
  "description": "This transformer wraps all typeof expressions with a method that replicates native behaviour. (ie. returning “symbol” for symbols)",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.46",
    "@babel/helper-plugin-test-runner": "7.0.0-beta.46"
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "@babel/plugin-transform-typeof-symbol",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.46"
  },
  "readme": "# @babel/plugin-transform-typeof-symbol\n\n> ES6 introduces a new native type called [symbols](https://babeljs.io/learn-es2015/#ecmascript-2015-features-symbols). This transformer wraps all `typeof` expressions with a method that replicates native behaviour. (ie. returning \"symbol\" for symbols)\n\n## Example\n\n**In**\n\n```javascript\ntypeof Symbol() === \"symbol\";\n```\n\n**Out**\n\n```javascript\nvar _typeof = function (obj) {\n  return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\n_typeof(Symbol()) === \"symbol\";\n```\n\n## Installation\n\n```sh\nnpm install --save-dev @babel/plugin-transform-typeof-symbol\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"@babel/plugin-transform-typeof-symbol\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins @babel/plugin-transform-typeof-symbol script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"@babel/plugin-transform-typeof-symbol\"]\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-typeof-symbol"
  },
  "version": "7.0.0-beta.46"
}
